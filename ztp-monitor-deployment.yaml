apiVersion: apps/v1
kind: Deployment
metadata:
  name: ztp-monitor-mc 
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      deployment: ztp-monitor-mc
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        deployment: ztp-monitor-mc 
    spec:
      containers:
      - args:
        - |
          set -o errexit
          set -o nounset
          set -o pipefail
          #unset KUBECONFIG
          cat <<SCRIPT > /tmp/ztp-monitor-mc
          #!/bin/bash
          echo $@

          function monitor_mc_labels {
            
            until [[ \$(oc get managedcluster --ignore-not-found=true --selector='ztp-done=') && ! \$(oc get managedcluster --ignore-not-found=true --selector='ztp-monitor-done=true') || \$(oc get managedcluster --ignore-not-found=true --selector='ztp-running=') && ! \$(oc get managedcluster --ignore-not-found=true --selector='ztp-monitor-done=true') ]]; do
              sleep 5;
            done
          }

          function log_message_update_labels {
            managedcluster_name=\$1

            label="false"

            if [[ \$(oc get managedcluster --ignore-not-found=true --selector='ztp-done=') ]]; then
              label="ztp-done"
            fi

            if [[ \$(oc get managedcluster --ignore-not-found=true --selector='ztp-running=') ]]; then
              label="ztp-running"
            fi

            case \$label in
            
            ztp-running)
              api_endpoint=\$(oc get managedcluster \$managedcluster_name -o jsonpath='{.spec.managedClusterClientConfigs[0].url}') 
              echo "Adding true to ztp-monitor-running label on \$managedcluster_name - This cluster is finished installing"
              echo "API endpoint is \$api_endpoint"
              oc label managedcluster --overwrite \$managedcluster_name ztp-monitor-running=true
              ;; 
            ztp-done)
              api_endpoint=\$(oc get managedcluster \$managedcluster_name -o jsonpath='{.spec.managedClusterClientConfigs[0].url}') 
              echo "Adding true to ztp-monitor-done label on \$managedcluster_name - The DU profile has been applied"
              echo "API endpoint is \$api_endpoint"
              oc label managedcluster --overwrite \$managedcluster_name ztp-monitor-done=true 
              ;;

            esac
          }

          case \$KUBE_ACTION in
            Updated) monitor_mc_labels
                   log_message_update_labels \$*
                   ;;
          esac
          SCRIPT
          chmod u+x /tmp/ztp-monitor-mc

          exec oc observe managedcluster --quiet --type-env-var=KUBE_ACTION --maximum-errors=1 --resync-period=10m --template='{.metadata.name}' -- /tmp/ztp-monitor-mc
          #exec oc observe managedcluster --quiet --type-env-var=KUBE_ACTION --maximum-errors=1 --resync-period=10m --template='{.spec.managedClusterClientConfigs[0].url}' -- /tmp/ztp-monitor-mc
        command:
        - /bin/bash
        - -xc
        #- "sleep 9000"
        image: jumphost.inbound.vz.bos2.lab:5000/openshift4/ose-cli@sha256:728b0198d84b0730f17b07103d00391c18b8c4f2c9c75d64aa6b7aba83185d59
        imagePullPolicy: IfNotPresent
        name: ztp-monitor-mc
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      serviceAccount: ztp-monitor-mc 
      serviceAccountName: ztp-monitor-mc
      terminationGracePeriodSeconds: 30

